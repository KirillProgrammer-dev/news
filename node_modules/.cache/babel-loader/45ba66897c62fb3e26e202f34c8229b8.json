{"ast":null,"code":"import _defineProperty from \"/DATA/html/9/vue-vuetify-router-axios/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/DATA/html/9/vue-vuetify-router-axios/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"../../../src/components/VGrid/VGrid.sass\";\nimport Vue from 'vue';\nimport mergeData from '../../util/mergeData';\nimport { upperFirst } from '../../util/helpers'; // no xs\n\nvar breakpoints = ['sm', 'md', 'lg', 'xl'];\nvar ALIGNMENT = ['start', 'end', 'center'];\n\nfunction makeProps(prefix, def) {\n  return breakpoints.reduce(function (props, val) {\n    props[prefix + upperFirst(val)] = def();\n    return props;\n  }, {});\n}\n\nvar alignValidator = function alignValidator(str) {\n  return [].concat(ALIGNMENT, ['baseline', 'stretch']).includes(str);\n};\n\nvar alignProps = makeProps('align', function () {\n  return {\n    type: String,\n    default: null,\n    validator: alignValidator\n  };\n});\n\nvar justifyValidator = function justifyValidator(str) {\n  return [].concat(ALIGNMENT, ['space-between', 'space-around']).includes(str);\n};\n\nvar justifyProps = makeProps('justify', function () {\n  return {\n    type: String,\n    default: null,\n    validator: justifyValidator\n  };\n});\n\nvar alignContentValidator = function alignContentValidator(str) {\n  return [].concat(ALIGNMENT, ['space-between', 'space-around', 'stretch']).includes(str);\n};\n\nvar alignContentProps = makeProps('alignContent', function () {\n  return {\n    type: String,\n    default: null,\n    validator: alignContentValidator\n  };\n});\nvar propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps)\n};\nvar classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content'\n};\n\nfunction breakpointClass(type, prop, val) {\n  var className = classMap[type];\n\n  if (val == null) {\n    return undefined;\n  }\n\n  if (prop) {\n    // alignSm -> Sm\n    var breakpoint = prop.replace(type, '');\n    className += \"-\".concat(breakpoint);\n  } // .align-items-sm-center\n\n\n  className += \"-\".concat(val);\n  return className.toLowerCase();\n}\n\nvar cache = new Map();\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: _objectSpread(_objectSpread(_objectSpread({\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator\n    }\n  }, alignProps), {}, {\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator\n    }\n  }, justifyProps), {}, {\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator\n    }\n  }, alignContentProps),\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    var cacheKey = '';\n\n    for (var prop in props) {\n      cacheKey += String(props[prop]);\n    }\n\n    var classList = cache.get(cacheKey);\n\n    if (!classList) {\n      (function () {\n        var _classList$push;\n\n        classList = []; // Loop through `align`, `justify`, `alignContent` breakpoint props\n\n        var type;\n\n        for (type in propMap) {\n          propMap[type].forEach(function (prop) {\n            var value = props[prop];\n            var className = breakpointClass(type, prop, value);\n            if (className) classList.push(className);\n          });\n        }\n\n        classList.push((_classList$push = {\n          'no-gutters': props.noGutters,\n          'row--dense': props.dense\n        }, _defineProperty(_classList$push, \"align-\".concat(props.align), props.align), _defineProperty(_classList$push, \"justify-\".concat(props.justify), props.justify), _defineProperty(_classList$push, \"align-content-\".concat(props.alignContent), props.alignContent), _classList$push));\n        cache.set(cacheKey, classList);\n      })();\n    }\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'row',\n      class: classList\n    }), children);\n  }\n});","map":{"version":3,"sources":["../../../src/components/VGrid/VRow.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAA,0CAAA;AAEA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,SAAA,MAAA,sBAAA;AACA,SAAA,UAAA,QAAA,oBAAA,C,CAEA;;AACA,IAAM,WAAW,GAAG,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAApB,IAAoB,CAApB;AAEA,IAAM,SAAS,GAAG,CAAA,OAAA,EAAA,KAAA,EAAlB,QAAkB,CAAlB;;AAEA,SAAA,SAAA,CAAA,MAAA,EAAA,GAAA,EAA0D;AACxD,SAAO,WAAW,CAAX,MAAA,CAAmB,UAAA,KAAA,EAAA,GAAA,EAAe;AACvC,IAAA,KAAK,CAAC,MAAM,GAAG,UAAU,CAAzB,GAAyB,CAApB,CAAL,GAAkC,GAAlC,EAAA;AACA,WAAA,KAAA;AAFK,GAAA,EAAP,EAAO,CAAP;AAID;;AAED,IAAM,cAAc,GAAI,SAAlB,cAAkB,CAAA,GAAD;AAAA,SAAc,UAAA,SAAA,GAAA,UAAA,EAAA,SAAA,GAAA,QAAA,CAArC,GAAqC,CAAd;AAAA,CAAvB;;AACA,IAAM,UAAU,GAAG,SAAS,CAAA,OAAA,EAAU;AAAA,SAAO;AAC3C,IAAA,IAAI,EADuC,MAAA;AAE3C,IAAA,OAAO,EAFoC,IAAA;AAG3C,IAAA,SAAS,EAAE;AAHgC,GAAP;AAAA,CAAV,CAA5B;;AAMA,IAAM,gBAAgB,GAAI,SAApB,gBAAoB,CAAA,GAAD;AAAA,SAAc,UAAA,SAAA,GAAA,eAAA,EAAA,cAAA,GAAA,QAAA,CAAvC,GAAuC,CAAd;AAAA,CAAzB;;AACA,IAAM,YAAY,GAAG,SAAS,CAAA,SAAA,EAAY;AAAA,SAAO;AAC/C,IAAA,IAAI,EAD2C,MAAA;AAE/C,IAAA,OAAO,EAFwC,IAAA;AAG/C,IAAA,SAAS,EAAE;AAHoC,GAAP;AAAA,CAAZ,CAA9B;;AAMA,IAAM,qBAAqB,GAAI,SAAzB,qBAAyB,CAAA,GAAD;AAAA,SAAc,UAAA,SAAA,GAAA,eAAA,EAAA,cAAA,EAAA,SAAA,GAAA,QAAA,CAA5C,GAA4C,CAAd;AAAA,CAA9B;;AACA,IAAM,iBAAiB,GAAG,SAAS,CAAA,cAAA,EAAiB;AAAA,SAAO;AACzD,IAAA,IAAI,EADqD,MAAA;AAEzD,IAAA,OAAO,EAFkD,IAAA;AAGzD,IAAA,SAAS,EAAE;AAH8C,GAAP;AAAA,CAAjB,CAAnC;AAMA,IAAM,OAAO,GAAG;AACd,EAAA,KAAK,EAAE,MAAM,CAAN,IAAA,CADO,UACP,CADO;AAEd,EAAA,OAAO,EAAE,MAAM,CAAN,IAAA,CAFK,YAEL,CAFK;AAGd,EAAA,YAAY,EAAE,MAAM,CAAN,IAAA,CAAA,iBAAA;AAHA,CAAhB;AAMA,IAAM,QAAQ,GAAG;AACf,EAAA,KAAK,EADU,OAAA;AAEf,EAAA,OAAO,EAFQ,SAAA;AAGf,EAAA,YAAY,EAAE;AAHC,CAAjB;;AAMA,SAAA,eAAA,CAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAA+E;AAC7E,MAAI,SAAS,GAAG,QAAQ,CAAxB,IAAwB,CAAxB;;AACA,MAAI,GAAG,IAAP,IAAA,EAAiB;AACf,WAAA,SAAA;AACD;;AACD,MAAA,IAAA,EAAU;AACR;AACA,QAAM,UAAU,GAAG,IAAI,CAAJ,OAAA,CAAA,IAAA,EAAnB,EAAmB,CAAnB;AACA,IAAA,SAAS,eAAT,UAAS,CAAT;AAR2E,GAAA,CAU7E;;;AACA,EAAA,SAAS,eAAT,GAAS,CAAT;AACA,SAAO,SAAS,CAAhB,WAAO,EAAP;AACD;;AAED,IAAM,KAAK,GAAG,IAAd,GAAc,EAAd;AAEA,eAAe,GAAG,CAAH,MAAA,CAAW;AACxB,EAAA,IAAI,EADoB,OAAA;AAExB,EAAA,UAAU,EAFc,IAAA;AAGxB,EAAA,KAAK;AACH,IAAA,GAAG,EAAE;AACH,MAAA,IAAI,EADD,MAAA;AAEH,MAAA,OAAO,EAAE;AAFN,KADF;AAKH,IAAA,KAAK,EALA,OAAF;AAMH,IAAA,SAAS,EANJ,OAAF;AAOH,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EADC,MAAA;AAEL,MAAA,OAAO,EAFF,IAAA;AAGL,MAAA,SAAS,EAAE;AAHN;AAPJ,KAAE,UAAF;AAaH,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EADG,MAAA;AAEP,MAAA,OAAO,EAFA,IAAA;AAGP,MAAA,SAAS,EAAE;AAHJ;AAbN,KAAE,YAAF;AAmBH,IAAA,YAAY,EAAE;AACZ,MAAA,IAAI,EADQ,MAAA;AAEZ,MAAA,OAAO,EAFK,IAAA;AAGZ,MAAA,SAAS,EAAE;AAHC;AAnBX,KAwBA,iBAxBA,CAHmB;AA6BxB,EAAA,MA7BwB,kBA6BlB,CA7BkB,QA6BY;AAAA,QAAzB,KAAyB,QAAzB,KAAyB;AAAA,QAAzB,IAAyB,QAAzB,IAAyB;AAAA,QAAV,QAAU,QAAV,QAAU;AAClC;AACA,QAAI,QAAQ,GAAZ,EAAA;;AACA,SAAK,IAAL,IAAA,IAAA,KAAA,EAA0B;AACxB,MAAA,QAAQ,IAAI,MAAM,CAAE,KAAa,CAAjC,IAAiC,CAAf,CAAlB;AACD;;AACD,QAAI,SAAS,GAAG,KAAK,CAAL,GAAA,CAAhB,QAAgB,CAAhB;;AAEA,QAAI,CAAJ,SAAA,EAAgB;AAAA;AAAA;;AACd,QAAA,SAAS,GADK,EACd,CADc,CAEd;;AACA,YAAA,IAAA;;AACA,aAAA,IAAA,IAAA,OAAA,EAAsB;AACpB,UAAA,OAAO,CAAP,IAAO,CAAP,CAAA,OAAA,CAAsB,UAAA,IAAI,EAAG;AAC3B,gBAAM,KAAK,GAAY,KAAa,CAApC,IAAoC,CAApC;AACA,gBAAM,SAAS,GAAG,eAAe,CAAA,IAAA,EAAA,IAAA,EAAjC,KAAiC,CAAjC;AACA,gBAAA,SAAA,EAAe,SAAU,CAAV,IAAA,CAAA,SAAA;AAHjB,WAAA;AAKD;;AAED,QAAA,SAAS,CAAT,IAAA;AACE,wBAAc,KAAK,CADN,SAAf;AAEE,wBAAc,KAAK,CAFN;AAAf,4DAGY,KAAK,CAAf,KAHF,GAG4B,KAAK,CAHlB,KAAf,sDAIc,KAAK,CAAjB,OAJF,GAIgC,KAAK,CAJtB,OAAf,4DAKoB,KAAK,CAAvB,YALF,GAK2C,KAAK,CAAC,YALjD;AAQA,QAAA,KAAK,CAAL,GAAA,CAAA,QAAA,EAAA,SAAA;AApBc;AAqBf;;AAED,WAAO,CAAC,CACN,KAAK,CADC,GAAA,EAEN,SAAS,CAAA,IAAA,EAAO;AACd,MAAA,WAAW,EADG,KAAA;AAEd,MAAA,KAAK,EAAE;AAFO,KAAP,CAFH,EAAR,QAAQ,CAAR;AAQD;AApEuB,CAAX,CAAf","sourcesContent":["import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}