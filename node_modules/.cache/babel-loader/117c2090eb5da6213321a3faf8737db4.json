{"ast":null,"code":"import _defineProperty from \"/DATA/html/9/vue-vuetify-router-axios/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _typeof from \"/DATA/html/9/vue-vuetify-router-axios/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\n// Mixins\nimport Bootable from '../bootable'; // Utilities\n\nimport { getObjectValueByPath } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nimport { consoleWarn } from '../../util/console';\n\nfunction validateAttachTarget(val) {\n  var type = _typeof(val);\n\n  if (type === 'boolean' || type === 'string') return true;\n  return val.nodeType === Node.ELEMENT_NODE;\n}\n\nfunction removeActivator(activator) {\n  activator.forEach(function (node) {\n    node.elm && node.elm.parentNode && node.elm.parentNode.removeChild(node.elm);\n  });\n}\n/* @vue/component */\n\n\nexport default mixins(Bootable).extend({\n  name: 'detachable',\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget\n    },\n    contentClass: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      activatorNode: null,\n      hasDetached: false\n    };\n  },\n  watch: {\n    attach: function attach() {\n      this.hasDetached = false;\n      this.initDetach();\n    },\n    hasContent: function hasContent() {\n      this.$nextTick(this.initDetach);\n    }\n  },\n  beforeMount: function beforeMount() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      if (_this.activatorNode) {\n        var activator = Array.isArray(_this.activatorNode) ? _this.activatorNode : [_this.activatorNode];\n        activator.forEach(function (node) {\n          if (!node.elm) return;\n          if (!_this.$el.parentNode) return;\n          var target = _this.$el === _this.$el.parentNode.firstChild ? _this.$el : _this.$el.nextSibling;\n\n          _this.$el.parentNode.insertBefore(node.elm, target);\n        });\n      }\n    });\n  },\n  mounted: function mounted() {\n    this.hasContent && this.initDetach();\n  },\n  deactivated: function deactivated() {\n    this.isActive = false;\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.$refs.content && this.$refs.content.parentNode) {\n      this.$refs.content.parentNode.removeChild(this.$refs.content);\n    }\n  },\n  destroyed: function destroyed() {\n    var _this2 = this;\n\n    if (this.activatorNode) {\n      var activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode];\n\n      if (this.$el.isConnected) {\n        // Component has been destroyed but the element still exists, we must be in a transition\n        // Wait for the transition to finish before cleaning up the detached activator\n        var observer = new MutationObserver(function (list) {\n          if (list.some(function (record) {\n            return Array.from(record.removedNodes).includes(_this2.$el);\n          })) {\n            observer.disconnect();\n            removeActivator(activator);\n          }\n        });\n        observer.observe(this.$el.parentNode, {\n          subtree: false,\n          childList: true\n        });\n      } else {\n        removeActivator(activator);\n      }\n    }\n  },\n  methods: {\n    getScopeIdAttrs: function getScopeIdAttrs() {\n      var scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId');\n      return scopeId && _defineProperty({}, scopeId, '');\n    },\n    initDetach: function initDetach() {\n      if (this._isDestroyed || !this.$refs.content || this.hasDetached || // Leave menu in place if attached\n      // and dev has not changed target\n      this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n      this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n      this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return;\n      var target;\n\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]');\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach);\n      } else {\n        // DOM Element\n        target = this.attach;\n      }\n\n      if (!target) {\n        consoleWarn(\"Unable to locate target \".concat(this.attach || '[data-app]'), this);\n        return;\n      }\n\n      target.appendChild(this.$refs.content);\n      this.hasDetached = true;\n    }\n  }\n});","map":{"version":3,"sources":["../../../src/mixins/detachable/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\nfunction removeActivator (activator: VNode[]) {\n  activator.forEach(node => {\n    node.elm &&\n    node.elm.parentNode &&\n    node.elm.parentNode.removeChild(node.elm)\n  })\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    if (\n      this.$refs.content &&\n      this.$refs.content.parentNode\n    ) {\n      this.$refs.content.parentNode.removeChild(this.$refs.content)\n    }\n  },\n\n  destroyed () {\n    if (this.activatorNode) {\n      const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n      if (this.$el.isConnected) {\n        // Component has been destroyed but the element still exists, we must be in a transition\n        // Wait for the transition to finish before cleaning up the detached activator\n        const observer = new MutationObserver(list => {\n          if (\n            list.some(record => Array.from(record.removedNodes).includes(this.$el))\n          ) {\n            observer.disconnect()\n            removeActivator(activator)\n          }\n        })\n        observer.observe(this.$el.parentNode!, { subtree: false, childList: true })\n      } else {\n        removeActivator(activator)\n      }\n    }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}