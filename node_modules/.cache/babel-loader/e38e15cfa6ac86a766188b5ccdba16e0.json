{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { deprecate } from '../../util/console';\nimport Vue from 'vue';\n/* @vue/component */\n\nexport default Vue.extend({\n  name: 'mobile',\n  props: {\n    mobileBreakpoint: {\n      type: [Number, String],\n      default: function _default() {\n        // Avoid destroying unit\n        // tests for users\n        return this.$vuetify ? this.$vuetify.breakpoint.mobileBreakpoint : undefined;\n      },\n      validator: function validator(v) {\n        return !isNaN(Number(v)) || ['xs', 'sm', 'md', 'lg', 'xl'].includes(String(v));\n      }\n    }\n  },\n  computed: {\n    isMobile: function isMobile() {\n      var _this$$vuetify$breakp = this.$vuetify.breakpoint,\n          mobile = _this$$vuetify$breakp.mobile,\n          width = _this$$vuetify$breakp.width,\n          name = _this$$vuetify$breakp.name,\n          mobileBreakpoint = _this$$vuetify$breakp.mobileBreakpoint; // Check if local mobileBreakpoint matches\n      // the application's mobileBreakpoint\n\n      if (mobileBreakpoint === this.mobileBreakpoint) return mobile;\n      var mobileWidth = parseInt(this.mobileBreakpoint, 10);\n      var isNumber = !isNaN(mobileWidth);\n      return isNumber ? width < mobileWidth : name === this.mobileBreakpoint;\n    }\n  },\n  created: function created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('mobile-break-point')) {\n      deprecate('mobile-break-point', 'mobile-breakpoint', this);\n    }\n  }\n});","map":{"version":3,"sources":["../../../src/mixins/mobile/index.ts"],"names":[],"mappings":";;;AAEA,SAAA,SAAA,QAAA,oBAAA;AACA,OAAA,GAAA,MAAA,KAAA;AAEA;;AACA,eAAe,GAAG,CAAH,MAAA,CAAW;AACxB,EAAA,IAAI,EADoB,QAAA;AAGxB,EAAA,KAAK,EAAE;AACL,IAAA,gBAAgB,EAAE;AAChB,MAAA,IAAI,EAAE,CAAA,MAAA,EADU,MACV,CADU;AAEhB,MAAA,OAFgB,sBAET;AACL;AACA;AACA,eAAO,KAAA,QAAA,GACH,KAAA,QAAA,CAAA,UAAA,CADG,gBAAA,GAAP,SAAA;AALc,OAAA;AAShB,MAAA,SAAS,EAAE,mBAAA,CAAC;AAAA,eACV,CAAC,KAAK,CAAC,MAAM,CAAb,CAAa,CAAP,CAAN,IACA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,QAAA,CAAwC,MAAM,CAA9C,CAA8C,CAA9C,CAFU;AAAA;AATI;AADb,GAHiB;AAoBxB,EAAA,QAAQ,EAAE;AACR,IAAA,QADQ,sBACA;AACN,kCAKI,KAAA,QAAA,CANE,UACN;AAAA,UAAM,MAAN,yBAAM,MAAN;AAAA,UAAM,KAAN,yBAAM,KAAN;AAAA,UAAM,IAAN,yBAAM,IAAN;AAAA,UAIE,gBAJF,yBAIE,gBAJF,CADM,CAQN;AACA;;AACA,UAAI,gBAAgB,KAAK,KAAzB,gBAAA,EAAgD,OAAA,MAAA;AAEhD,UAAM,WAAW,GAAG,QAAQ,CAAC,KAAD,gBAAA,EAA5B,EAA4B,CAA5B;AACA,UAAM,QAAQ,GAAG,CAAC,KAAK,CAAvB,WAAuB,CAAvB;AAEA,aAAO,QAAQ,GACX,KAAK,GADM,WAAA,GAEX,IAAI,KAAK,KAFb,gBAAA;AAGD;AAnBO,GApBc;AA0CxB,EAAA,OA1CwB,qBA0CjB;AACL;AACA,QAAI,KAAA,MAAA,CAAA,cAAA,CAAJ,oBAAI,CAAJ,EAAsD;AACpD,MAAA,SAAS,CAAA,oBAAA,EAAA,mBAAA,EAAT,IAAS,CAAT;AACD;AACF;AA/CuB,CAAX,CAAf","sourcesContent":["// Types\nimport { BreakpointName } from 'vuetify/types/services/breakpoint'\nimport { deprecate } from '../../util/console'\nimport Vue, { PropType } from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'mobile',\n\n  props: {\n    mobileBreakpoint: {\n      type: [Number, String] as PropType<number | BreakpointName>,\n      default (): number | BreakpointName | undefined {\n        // Avoid destroying unit\n        // tests for users\n        return this.$vuetify\n          ? this.$vuetify.breakpoint.mobileBreakpoint\n          : undefined\n      },\n      validator: v => (\n        !isNaN(Number(v)) ||\n        ['xs', 'sm', 'md', 'lg', 'xl'].includes(String(v))\n      ),\n    },\n  },\n\n  computed: {\n    isMobile (): boolean {\n      const {\n        mobile,\n        width,\n        name,\n        mobileBreakpoint,\n      } = this.$vuetify.breakpoint\n\n      // Check if local mobileBreakpoint matches\n      // the application's mobileBreakpoint\n      if (mobileBreakpoint === this.mobileBreakpoint) return mobile\n\n      const mobileWidth = parseInt(this.mobileBreakpoint, 10)\n      const isNumber = !isNaN(mobileWidth)\n\n      return isNumber\n        ? width < mobileWidth\n        : name === this.mobileBreakpoint\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('mobile-break-point')) {\n      deprecate('mobile-break-point', 'mobile-breakpoint', this)\n    }\n  },\n})\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}