{"ast":null,"code":"function inserted(el, binding, vnode) {\n  var callback = binding.value;\n  var options = binding.options || {\n    passive: true\n  };\n  window.addEventListener('resize', callback, options);\n  el._onResize = Object(el._onResize);\n  el._onResize[vnode.context._uid] = {\n    callback: callback,\n    options: options\n  };\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback();\n  }\n}\n\nfunction unbind(el, binding, vnode) {\n  var _el$_onResize;\n\n  if (!((_el$_onResize = el._onResize) != null && _el$_onResize[vnode.context._uid])) return;\n  var _el$_onResize$vnode$c = el._onResize[vnode.context._uid],\n      callback = _el$_onResize$vnode$c.callback,\n      options = _el$_onResize$vnode$c.options;\n  window.removeEventListener('resize', callback, options);\n  delete el._onResize[vnode.context._uid];\n}\n\nexport var Resize = {\n  inserted: inserted,\n  unbind: unbind\n};\nexport default Resize;","map":{"version":3,"sources":["../../../src/directives/resize/index.ts"],"names":[],"mappings":"AAQA,SAAA,QAAA,CAAA,EAAA,EAAA,OAAA,EAAA,KAAA,EAA+E;AAC7E,MAAM,QAAQ,GAAG,OAAO,CAAxB,KAAA;AACA,MAAM,OAAO,GAAG,OAAO,CAAP,OAAA,IAAmB;AAAE,IAAA,OAAO,EAAE;AAAX,GAAnC;AAEA,EAAA,MAAM,CAAN,gBAAA,CAAA,QAAA,EAAA,QAAA,EAAA,OAAA;AAEA,EAAA,EAAE,CAAF,SAAA,GAAe,MAAM,CAAC,EAAE,CAAxB,SAAqB,CAArB;AACA,EAAA,EAAE,CAAF,SAAA,CAAc,KAAK,CAAL,OAAA,CAAd,IAAA,IAAqC;AACnC,IAAA,QADmC,EACnC,QADmC;AAEnC,IAAA,OAAA,EAAA;AAFmC,GAArC;;AAKA,MAAI,CAAC,OAAO,CAAR,SAAA,IAAsB,CAAC,OAAO,CAAP,SAAA,CAA3B,KAAA,EAAoD;AAClD,IAAA,QAAQ;AACT;AACF;;AAED,SAAA,MAAA,CAAA,EAAA,EAAA,OAAA,EAAA,KAAA,EAA6E;AAAA,MAAA,aAAA;;AAC3E,MAAI,EAAA,CAAA,aAAA,GAAC,EAAE,CAAH,SAAA,KAAA,IAAA,IAAC,aAAA,CAAe,KAAK,CAAL,OAAA,CAApB,IAAK,CAAD,CAAJ,EAA0C;AAE1C,8BAA8B,EAAE,CAAF,SAAA,CAAa,KAAK,CAAL,OAAA,CAA3C,IAA8B,CAA9B;AAAA,MAAM,QAAN,yBAAM,QAAN;AAAA,MAAkB,OAAlB,yBAAkB,OAAlB;AAEA,EAAA,MAAM,CAAN,mBAAA,CAAA,QAAA,EAAA,QAAA,EAAA,OAAA;AAEA,SAAO,EAAE,CAAF,SAAA,CAAa,KAAK,CAAL,OAAA,CAApB,IAAO,CAAP;AACD;;AAED,OAAO,IAAM,MAAM,GAAG;AACpB,EAAA,QADoB,EACpB,QADoB;AAEpB,EAAA,MAAA,EAAA;AAFoB,CAAf;AAKP,eAAA,MAAA","sourcesContent":["import { VNodeDirective } from 'vue/types/vnode'\nimport { VNode } from 'vue'\n\ninterface ResizeVNodeDirective extends VNodeDirective {\n  value?: () => void\n  options?: boolean | AddEventListenerOptions\n}\n\nfunction inserted (el: HTMLElement, binding: ResizeVNodeDirective, vnode: VNode) {\n  const callback = binding.value!\n  const options = binding.options || { passive: true }\n\n  window.addEventListener('resize', callback, options)\n\n  el._onResize = Object(el._onResize)\n  el._onResize![vnode.context!._uid] = {\n    callback,\n    options,\n  }\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback()\n  }\n}\n\nfunction unbind (el: HTMLElement, binding: ResizeVNodeDirective, vnode: VNode) {\n  if (!el._onResize?.[vnode.context!._uid]) return\n\n  const { callback, options } = el._onResize[vnode.context!._uid]!\n\n  window.removeEventListener('resize', callback, options)\n\n  delete el._onResize[vnode.context!._uid]\n}\n\nexport const Resize = {\n  inserted,\n  unbind,\n}\n\nexport default Resize\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}