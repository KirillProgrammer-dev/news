{"ast":null,"code":"import _objectSpread from \"/Users/marinatells/Coding/promweb/lesson14/vue-vuetify-router-axios/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.string.fixed.js\";\nimport \"core-js/modules/es.number.constructor.js\";\n// Styles\nimport \"../../../src/components/VAppBar/VAppBar.sass\"; // Extensions\n\nimport VToolbar from '../VToolbar/VToolbar'; // Directives\n\nimport Scroll from '../../directives/scroll'; // Mixins\n\nimport Applicationable from '../../mixins/applicationable';\nimport Scrollable from '../../mixins/scrollable';\nimport SSRBootable from '../../mixins/ssr-bootable';\nimport Toggleable from '../../mixins/toggleable'; // Utilities\n\nimport { convertToUnit } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nvar baseMixins = mixins(VToolbar, Scrollable, SSRBootable, Toggleable, Applicationable('top', ['clippedLeft', 'clippedRight', 'computedHeight', 'invertedScroll', 'isExtended', 'isProminent', 'value']));\n/* @vue/component */\n\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n  directives: {\n    Scroll: Scroll\n  },\n  provide: function provide() {\n    return {\n      VAppBar: this\n    };\n  },\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      isActive: this.value\n    };\n  },\n  computed: {\n    applicationProperty: function applicationProperty() {\n      return !this.bottom ? 'top' : 'bottom';\n    },\n    canScroll: function canScroll() {\n      return Scrollable.options.computed.canScroll.call(this) && (this.invertedScroll || this.elevateOnScroll || this.hideOnScroll || this.collapseOnScroll || this.isBooted || // If falsy, user has provided an\n      // explicit value which should\n      // overwrite anything we do\n      !this.value);\n    },\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, VToolbar.options.computed.classes.call(this)), {}, {\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll\n      });\n    },\n    scrollRatio: function scrollRatio() {\n      var threshold = this.computedScrollThreshold;\n      return Math.max((threshold - this.currentScroll) / threshold, 0);\n    },\n    computedContentHeight: function computedContentHeight() {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this);\n      var min = this.dense ? 48 : 56;\n      var max = this.computedOriginalHeight;\n      return min + (max - min) * this.scrollRatio;\n    },\n    computedFontSize: function computedFontSize() {\n      if (!this.isProminent) return undefined;\n      var min = 1.25;\n      var max = 1.5;\n      return min + (max - min) * this.scrollRatio;\n    },\n    computedLeft: function computedLeft() {\n      if (!this.app || this.clippedLeft) return 0;\n      return this.$vuetify.application.left;\n    },\n    computedMarginTop: function computedMarginTop() {\n      if (!this.app) return 0;\n      return this.$vuetify.application.bar;\n    },\n    computedOpacity: function computedOpacity() {\n      if (!this.fadeImgOnScroll) return undefined;\n      return this.scrollRatio;\n    },\n    computedOriginalHeight: function computedOriginalHeight() {\n      var height = VToolbar.options.computed.computedContentHeight.call(this);\n      if (this.isExtended) height += parseInt(this.extensionHeight);\n      return height;\n    },\n    computedRight: function computedRight() {\n      if (!this.app || this.clippedRight) return 0;\n      return this.$vuetify.application.right;\n    },\n    computedScrollThreshold: function computedScrollThreshold() {\n      if (this.scrollThreshold) return Number(this.scrollThreshold);\n      return this.computedOriginalHeight - (this.dense ? 48 : 56);\n    },\n    computedTransform: function computedTransform() {\n      if (!this.canScroll || this.elevateOnScroll && this.currentScroll === 0 && this.isActive) return 0;\n      if (this.isActive) return 0;\n      var scrollOffScreen = this.scrollOffScreen ? this.computedHeight : this.computedContentHeight;\n      return this.bottom ? scrollOffScreen : -scrollOffScreen;\n    },\n    hideShadow: function hideShadow() {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold;\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 || this.computedTransform < 0;\n      }\n\n      return (!this.isExtended || this.scrollOffScreen) && this.computedTransform !== 0;\n    },\n    isCollapsed: function isCollapsed() {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this);\n      }\n\n      return this.currentScroll > 0;\n    },\n    isProminent: function isProminent() {\n      return VToolbar.options.computed.isProminent.call(this) || this.shrinkOnScroll;\n    },\n    styles: function styles() {\n      return _objectSpread(_objectSpread({}, VToolbar.options.computed.styles.call(this)), {}, {\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: \"translateY(\".concat(convertToUnit(this.computedTransform), \")\"),\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight)\n      });\n    }\n  },\n  watch: {\n    canScroll: 'onScroll',\n    computedTransform: function computedTransform() {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (!this.canScroll || !this.clippedLeft && !this.clippedRight) return;\n      this.callUpdate();\n    },\n    invertedScroll: function invertedScroll(val) {\n      this.isActive = !val || this.currentScroll !== 0;\n    },\n    hideOnScroll: function hideOnScroll(val) {\n      this.isActive = !val || this.currentScroll < this.computedScrollThreshold;\n    }\n  },\n  created: function created() {\n    if (this.invertedScroll) this.isActive = false;\n  },\n  methods: {\n    genBackground: function genBackground() {\n      var render = VToolbar.options.methods.genBackground.call(this);\n      render.data = this._b(render.data || {}, render.tag, {\n        style: {\n          opacity: this.computedOpacity\n        }\n      });\n      return render;\n    },\n    updateApplication: function updateApplication() {\n      return this.invertedScroll ? 0 : this.computedHeight + this.computedTransform;\n    },\n    thresholdMet: function thresholdMet() {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold;\n        return;\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp || this.currentScroll < this.computedScrollThreshold;\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return;\n      this.savedScroll = this.currentScroll;\n    }\n  },\n  render: function render(h) {\n    var render = VToolbar.options.render.call(this, h);\n    render.data = render.data || {};\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || [];\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll\n      });\n    }\n\n    return render;\n  }\n});","map":{"version":3,"sources":["../../../src/components/VAppBar/VAppBar.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VAppBar.sass'\n\n// Extensions\nimport VToolbar from '../VToolbar/VToolbar'\n\n// Directives\nimport Scroll from '../../directives/scroll'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport Scrollable from '../../mixins/scrollable'\nimport SSRBootable from '../../mixins/ssr-bootable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  VToolbar,\n  Scrollable,\n  SSRBootable,\n  Toggleable,\n  Applicationable('top', [\n    'clippedLeft',\n    'clippedRight',\n    'computedHeight',\n    'invertedScroll',\n    'isExtended',\n    'isProminent',\n    'value',\n  ])\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n\n  directives: { Scroll },\n\n  provide (): object {\n    return { VAppBar: this }\n  },\n\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data () {\n    return {\n      isActive: this.value,\n    }\n  },\n\n  computed: {\n    applicationProperty (): string {\n      return !this.bottom ? 'top' : 'bottom'\n    },\n    canScroll (): boolean {\n      return (\n        Scrollable.options.computed.canScroll.call(this) &&\n        (\n          this.invertedScroll ||\n          this.elevateOnScroll ||\n          this.hideOnScroll ||\n          this.collapseOnScroll ||\n          this.isBooted ||\n          // If falsy, user has provided an\n          // explicit value which should\n          // overwrite anything we do\n          !this.value\n        )\n      )\n    },\n    classes (): object {\n      return {\n        ...VToolbar.options.computed.classes.call(this),\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll,\n      }\n    },\n    scrollRatio (): number {\n      const threshold = this.computedScrollThreshold\n      return Math.max((threshold - this.currentScroll) / threshold, 0)\n    },\n    computedContentHeight (): number {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this)\n\n      const min = this.dense ? 48 : 56\n      const max = this.computedOriginalHeight\n\n      return min + (max - min) * this.scrollRatio\n    },\n    computedFontSize (): number | undefined {\n      if (!this.isProminent) return undefined\n\n      const min = 1.25\n      const max = 1.5\n\n      return min + (max - min) * this.scrollRatio\n    },\n    computedLeft (): number {\n      if (!this.app || this.clippedLeft) return 0\n\n      return this.$vuetify.application.left\n    },\n    computedMarginTop (): number {\n      if (!this.app) return 0\n\n      return this.$vuetify.application.bar\n    },\n    computedOpacity (): number | undefined {\n      if (!this.fadeImgOnScroll) return undefined\n\n      return this.scrollRatio\n    },\n    computedOriginalHeight (): number {\n      let height = VToolbar.options.computed.computedContentHeight.call(this)\n      if (this.isExtended) height += parseInt(this.extensionHeight)\n      return height\n    },\n    computedRight (): number {\n      if (!this.app || this.clippedRight) return 0\n\n      return this.$vuetify.application.right\n    },\n    computedScrollThreshold (): number {\n      if (this.scrollThreshold) return Number(this.scrollThreshold)\n\n      return this.computedOriginalHeight - (this.dense ? 48 : 56)\n    },\n    computedTransform (): number {\n      if (\n        !this.canScroll ||\n        (this.elevateOnScroll && this.currentScroll === 0 && this.isActive)\n      ) return 0\n\n      if (this.isActive) return 0\n\n      const scrollOffScreen = this.scrollOffScreen\n        ? this.computedHeight\n        : this.computedContentHeight\n\n      return this.bottom ? scrollOffScreen : -scrollOffScreen\n    },\n    hideShadow (): boolean {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 ||\n          this.computedTransform < 0\n      }\n\n      return (\n        !this.isExtended ||\n        this.scrollOffScreen\n      ) && this.computedTransform !== 0\n    },\n    isCollapsed (): boolean {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this)\n      }\n\n      return this.currentScroll > 0\n    },\n    isProminent (): boolean {\n      return (\n        VToolbar.options.computed.isProminent.call(this) ||\n        this.shrinkOnScroll\n      )\n    },\n    styles (): object {\n      return {\n        ...VToolbar.options.computed.styles.call(this),\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: `translateY(${convertToUnit(this.computedTransform)})`,\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight),\n      }\n    },\n  },\n\n  watch: {\n    canScroll: 'onScroll',\n    computedTransform () {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (\n        !this.canScroll ||\n        (!this.clippedLeft && !this.clippedRight)\n      ) return\n\n      this.callUpdate()\n    },\n    invertedScroll (val: boolean) {\n      this.isActive = !val || this.currentScroll !== 0\n    },\n    hideOnScroll (val: boolean) {\n      this.isActive = !val || this.currentScroll < this.computedScrollThreshold\n    },\n  },\n\n  created () {\n    if (this.invertedScroll) this.isActive = false\n  },\n\n  methods: {\n    genBackground () {\n      const render = VToolbar.options.methods.genBackground.call(this)\n\n      render.data = this._b(render.data || {}, render.tag!, {\n        style: { opacity: this.computedOpacity },\n      })\n\n      return render\n    },\n    updateApplication (): number {\n      return this.invertedScroll\n        ? 0\n        : this.computedHeight + this.computedTransform\n    },\n    thresholdMet () {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold\n        return\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp ||\n          this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return\n\n      this.savedScroll = this.currentScroll\n    },\n  },\n\n  render (h): VNode {\n    const render = VToolbar.options.render.call(this, h)\n\n    render.data = render.data || {}\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || []\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll,\n      })\n    }\n\n    return render\n  },\n})\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}