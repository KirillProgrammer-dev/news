{"ast":null,"code":"import _defineProperty from \"/DATA/html/9/vue-vuetify-router-axios/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// Mixins\nimport { inject as RegistrableInject } from '../registrable';\nexport function factory(namespace, child, parent) {\n  return RegistrableInject(namespace, child, parent).extend({\n    name: 'groupable',\n    props: {\n      activeClass: {\n        type: String,\n        default: function _default() {\n          if (!this[namespace]) return undefined;\n          return this[namespace].activeClass;\n        }\n      },\n      disabled: Boolean\n    },\n    data: function data() {\n      return {\n        isActive: false\n      };\n    },\n    computed: {\n      groupClasses: function groupClasses() {\n        if (!this.activeClass) return {};\n        return _defineProperty({}, this.activeClass, this.isActive);\n      }\n    },\n    created: function created() {\n      this[namespace] && this[namespace].register(this);\n    },\n    beforeDestroy: function beforeDestroy() {\n      this[namespace] && this[namespace].unregister(this);\n    },\n    methods: {\n      toggle: function toggle() {\n        this.$emit('change');\n      }\n    }\n  });\n}\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\n\nvar Groupable = factory('itemGroup');\nexport default Groupable;","map":{"version":3,"sources":["../../../src/mixins/groupable/index.ts"],"names":[],"mappings":";AAAA;AACA,SAAsB,MAAM,IAA5B,iBAAA,QAAA,gBAAA;AAeA,OAAM,SAAA,OAAA,CAAA,SAAA,EAAA,KAAA,EAAA,MAAA,EAGW;AAEf,SAAO,iBAAiB,CAAA,SAAA,EAAA,KAAA,EAAjB,MAAiB,CAAjB,CAAA,MAAA,CAAyD;AAC9D,IAAA,IAAI,EAD0D,WAAA;AAG9D,IAAA,KAAK,EAAE;AACL,MAAA,WAAW,EAAE;AACX,QAAA,IAAI,EADO,MAAA;AAEX,QAAA,OAFW,sBAEJ;AACL,cAAI,CAAC,KAAL,SAAK,CAAL,EAAsB,OAAA,SAAA;AAEtB,iBAAO,KAAA,SAAA,EAAP,WAAA;AACD;AANU,OADR;AASL,MAAA,QAAQ,EAAE;AATL,KAHuD;AAe9D,IAAA,IAf8D,kBAe1D;AACF,aAAO;AACL,QAAA,QAAQ,EAAE;AADL,OAAP;AAhB4D,KAAA;AAqB9D,IAAA,QAAQ,EAAE;AACR,MAAA,YADQ,0BACI;AACV,YAAI,CAAC,KAAL,WAAA,EAAuB,OAAA,EAAA;AAEvB,mCACG,KAAD,WADF,EACsB,KAAK,QAD3B;AAGD;AAPO,KArBoD;AA+B9D,IAAA,OA/B8D,qBA+BvD;AACL,WAAA,SAAA,KAAoB,KAAA,SAAA,EAAA,QAAA,CAApB,IAAoB,CAApB;AAhC4D,KAAA;AAmC9D,IAAA,aAnC8D,2BAmCjD;AACX,WAAA,SAAA,KAAoB,KAAA,SAAA,EAAA,UAAA,CAApB,IAAoB,CAApB;AApC4D,KAAA;AAuC9D,IAAA,OAAO,EAAE;AACP,MAAA,MADO,oBACD;AACJ,aAAA,KAAA,CAAA,QAAA;AACD;AAHM;AAvCqD,GAAzD,CAAP;AA6CD;AAED;;AACA,IAAM,SAAS,GAAG,OAAO,CAAzB,WAAyB,CAAzB;AAEA,eAAA,SAAA","sourcesContent":["// Mixins\nimport { Registrable, inject as RegistrableInject } from '../registrable'\n\n// Utilities\nimport { ExtractVue } from '../../util/mixins'\nimport { VueConstructor } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport type Groupable<T extends string, C extends VueConstructor | null = null> = VueConstructor<ExtractVue<Registrable<T, C>> & {\n  activeClass: string\n  isActive: boolean\n  disabled: boolean\n  groupClasses: object\n  toggle (): void\n}>\n\nexport function factory<T extends string, C extends VueConstructor | null = null> (\n  namespace: T,\n  child?: string,\n  parent?: string\n): Groupable<T, C> {\n  return RegistrableInject<T, C>(namespace, child, parent).extend({\n    name: 'groupable',\n\n    props: {\n      activeClass: {\n        type: String,\n        default (): string | undefined {\n          if (!this[namespace]) return undefined\n\n          return this[namespace].activeClass\n        },\n      } as any as PropValidator<string>,\n      disabled: Boolean,\n    },\n\n    data () {\n      return {\n        isActive: false,\n      }\n    },\n\n    computed: {\n      groupClasses (): object {\n        if (!this.activeClass) return {}\n\n        return {\n          [this.activeClass]: this.isActive,\n        }\n      },\n    },\n\n    created () {\n      this[namespace] && (this[namespace] as any).register(this)\n    },\n\n    beforeDestroy () {\n      this[namespace] && (this[namespace] as any).unregister(this)\n    },\n\n    methods: {\n      toggle () {\n        this.$emit('change')\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Groupable = factory('itemGroup')\n\nexport default Groupable\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}