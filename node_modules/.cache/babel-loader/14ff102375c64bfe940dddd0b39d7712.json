{"ast":null,"code":"import _typeof from \"/DATA/html/9/vue-vuetify-router-axios/node_modules/@babel/runtime/helpers/esm/typeof.js\";\n\nfunction inserted(el, binding, vnode) {\n  var _ref = binding.modifiers || {},\n      _ref$self = _ref.self,\n      self = _ref$self === void 0 ? false : _ref$self;\n\n  var value = binding.value;\n  var options = _typeof(value) === 'object' && value.options || {\n    passive: true\n  };\n  var handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler;\n  var target = self ? el : binding.arg ? document.querySelector(binding.arg) : window;\n  if (!target) return;\n  target.addEventListener('scroll', handler, options);\n  el._onScroll = Object(el._onScroll);\n  el._onScroll[vnode.context._uid] = {\n    handler: handler,\n    options: options,\n    // Don't reference self\n    target: self ? undefined : target\n  };\n}\n\nfunction unbind(el, binding, vnode) {\n  var _el$_onScroll;\n\n  if (!((_el$_onScroll = el._onScroll) != null && _el$_onScroll[vnode.context._uid])) return;\n  var _el$_onScroll$vnode$c = el._onScroll[vnode.context._uid],\n      handler = _el$_onScroll$vnode$c.handler,\n      options = _el$_onScroll$vnode$c.options,\n      _el$_onScroll$vnode$c2 = _el$_onScroll$vnode$c.target,\n      target = _el$_onScroll$vnode$c2 === void 0 ? el : _el$_onScroll$vnode$c2;\n  target.removeEventListener('scroll', handler, options);\n  delete el._onScroll[vnode.context._uid];\n}\n\nexport var Scroll = {\n  inserted: inserted,\n  unbind: unbind\n};\nexport default Scroll;","map":{"version":3,"sources":["../../../src/directives/scroll/index.ts"],"names":[],"mappings":";;AAaA,SAAA,QAAA,CAAA,EAAA,EAAA,OAAA,EAAA,KAAA,EAA+E;AAC7E,aAAyB,OAAO,CAAP,SAAA,IAAzB,EAAA;AAAA,uBAAQ,IAAR;AAAA,MAAQ,IAAR,0BAAe,KAAf;;AACA,MAAM,KAAK,GAAG,OAAO,CAArB,KAAA;AACA,MAAM,OAAO,GAAI,QAAA,KAAA,MAAA,QAAA,IAA6B,KAAK,CAAnC,OAAC,IAA+C;AAAE,IAAA,OAAO,EAAE;AAAX,GAAhE;AACA,MAAM,OAAO,GAAG,OAAA,KAAA,KAAA,UAAA,IAA+B,iBAA/B,KAAA,GAAA,KAAA,GAAgE,KAAK,CAArF,OAAA;AAEA,MAAM,MAAM,GAAG,IAAI,GAAA,EAAA,GAEf,OAAO,CAAP,GAAA,GACE,QAAQ,CAAR,aAAA,CAAuB,OAAO,CADhC,GACE,CADF,GAFJ,MAAA;AAMA,MAAI,CAAJ,MAAA,EAAa;AAEb,EAAA,MAAM,CAAN,gBAAA,CAAA,QAAA,EAAA,OAAA,EAAA,OAAA;AAEA,EAAA,EAAE,CAAF,SAAA,GAAe,MAAM,CAAC,EAAE,CAAxB,SAAqB,CAArB;AACA,EAAA,EAAE,CAAF,SAAA,CAAc,KAAK,CAAL,OAAA,CAAd,IAAA,IAAqC;AACnC,IAAA,OADmC,EACnC,OADmC;AAEnC,IAAA,OAFmC,EAEnC,OAFmC;AAGnC;AACA,IAAA,MAAM,EAAE,IAAI,GAAA,SAAA,GAAe;AAJQ,GAArC;AAMD;;AAED,SAAA,MAAA,CAAA,EAAA,EAAA,OAAA,EAAA,KAAA,EAA6E;AAAA,MAAA,aAAA;;AAC3E,MAAI,EAAA,CAAA,aAAA,GAAC,EAAE,CAAH,SAAA,KAAA,IAAA,IAAC,aAAA,CAAe,KAAK,CAAL,OAAA,CAApB,IAAK,CAAD,CAAJ,EAA0C;AAE1C,8BAA0C,EAAE,CAAF,SAAA,CAAa,KAAK,CAAL,OAAA,CAAvD,IAA0C,CAA1C;AAAA,MAAM,OAAN,yBAAM,OAAN;AAAA,MAAM,OAAN,yBAAM,OAAN;AAAA,qDAA0B,MAA1B;AAAA,MAA0B,MAA1B,uCAAmC,EAAnC;AAEA,EAAA,MAAM,CAAN,mBAAA,CAAA,QAAA,EAAA,OAAA,EAAA,OAAA;AACA,SAAO,EAAE,CAAF,SAAA,CAAa,KAAK,CAAL,OAAA,CAApB,IAAO,CAAP;AACD;;AAED,OAAO,IAAM,MAAM,GAAG;AACpB,EAAA,QADoB,EACpB,QADoB;AAEpB,EAAA,MAAA,EAAA;AAFoB,CAAf;AAKP,eAAA,MAAA","sourcesContent":["import { VNodeDirective } from 'vue/types/vnode'\nimport { DirectiveOptions, VNode } from 'vue'\n\ninterface ScrollVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value: EventListener | {\n    handler: EventListener\n    options?: boolean | AddEventListenerOptions\n  } | EventListenerObject & { options?: boolean | AddEventListenerOptions }\n  modifiers?: {\n    self?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: ScrollVNodeDirective, vnode: VNode) {\n  const { self = false } = binding.modifiers || {}\n  const value = binding.value\n  const options = (typeof value === 'object' && value.options) || { passive: true }\n  const handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler\n\n  const target = self\n    ? el\n    : binding.arg\n      ? document.querySelector(binding.arg)\n      : window\n\n  if (!target) return\n\n  target.addEventListener('scroll', handler, options)\n\n  el._onScroll = Object(el._onScroll)\n  el._onScroll![vnode.context!._uid] = {\n    handler,\n    options,\n    // Don't reference self\n    target: self ? undefined : target,\n  }\n}\n\nfunction unbind (el: HTMLElement, binding: ScrollVNodeDirective, vnode: VNode) {\n  if (!el._onScroll?.[vnode.context!._uid]) return\n\n  const { handler, options, target = el } = el._onScroll[vnode.context!._uid]!\n\n  target.removeEventListener('scroll', handler, options)\n  delete el._onScroll[vnode.context!._uid]\n}\n\nexport const Scroll = {\n  inserted,\n  unbind,\n} as DirectiveOptions\n\nexport default Scroll\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}